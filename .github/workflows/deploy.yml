name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm test

    - name: Build Docker Image
      run: docker build -t my-docker-app .
    
    - name: Check RAILWAY_TOKEN Availability
      run: |
        if [ -z "${{ secrets.RAILWAY_TOKEN }}" ]; then
          echo "❌ RAILWAY_TOKEN is not available!"
          exit 1
        else
          echo "✅ RAILWAY_TOKEN is successfully detected."
        fi

    - name: Push Docker Image to Railway (Deploy)
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        NODE_ENV: ${{ secrets.NODE_ENV }}
        PORT: ${{ secrets.PORT }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        docker tag my-docker-app registry.railway.app/my-docker-app:latest
        docker push registry.railway.app/my-docker-app:latest
